{"version":3,"sources":["shared/components/UI/Modal.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","cart/components/CartItem.js","cart/pages/Cart.js"],"names":["Modal","props","ReactDOM","createPortal","className","children","onClick","yes","danger","no","document","getElementById","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","CartItem","data","Card","name","price","inCart","readOnly","Button","onDelete","Cart","useState","JSON","parse","localStorage","getItem","cartItems","setCartItems","showModal","setShowModal","useHttp","isLoading","sendReq","useEffect","a","console","log","productIds","map","ci","id","queryString","forEach","pid","res","newCart","refreshedData","products","findIndex","p","push","stock","setItem","stringify","refreshCartData","LoadingSpinner","filter","deleteCartItem","to"],"mappings":"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","file":"static/js/4.50623c5e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from './Button';\nimport Backdrop from './Backdrop';\n\nconst Modal = props => {\n  return ReactDOM.createPortal(\n    <Backdrop>\n      <div className=\"bg-white p-4 rounded-md\">\n        {props.children}\n        <div className=\"flex justify-center space-x-2 mt-3\">\n          <Button className=\"p-1 px-5\" onClick={props.yes}>Yes</Button>\n          <Button danger className=\"p-1 px-5\" onClick={props.no}>No</Button>\n        </div>\n      </div>\n    </Backdrop>\n  , document.getElementById('modal-hook'));\n}\n\nexport default Modal;","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from 'react';\n\nimport Button from '../../shared/components/UI/Button';\nimport Card from '../../shared/components/UI/Card';\n\n// todo\n// * modal\n// * store items in local storage if not logged in\n// ! spater: store items in user DB if logged in\n\nconst CartItem = props => {\n  const { data } = props;\n  return (\n    <Card className=\"p-3 py-3 flex justify-between items-center\">\n      <div className=\"flex justify-between\">\n        <h2 className=\"\">{data.name}</h2>\n      </div>\n      <div className=\"flex space-x-10\">\n        <div className=\"flex space-x-4 items-center\">\n          <p className=\"font-bold\">{`Â£${data.price}`}</p>\n          <input value={data.inCart} readOnly className=\"w-10 border border-gray-300 rounded-sm text-center p-1 font-light\" />\n        </div>\n        <div className=\"flex justify-center items-center\">\n          <Button danger onClick={props.onDelete} className=\"p-1\">\n            <i className=\"fa fa-fw fa-times text-white\" />\n          </Button>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default CartItem;","import React, { useEffect, useState, useRef, useCallback } from 'react';\n\nimport { useHttp } from '../../shared/hooks/useHttp';\n\nimport LoadingSpinner from '../../shared/components/UI/LoadingSpinner';\nimport Modal from '../../shared/components/UI/Modal';\nimport Button from '../../shared/components/UI/Button';\nimport CartItem from '../components/CartItem';\n\nconst Cart = props => {\n  const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem('LOCAL_CART')) || []);\n  const [showModal, setShowModal] = useState(false);\n\n  const [isLoading, error, success, sendReq] = useHttp();\n\n  const deleteCartItem = id => {\n    const cart = JSON.parse(localStorage.getItem('LOCAL_CART'));\n    const newCart = cart.filter(ci => ci.id !== id);\n    localStorage.setItem('LOCAL_CART', JSON.stringify(newCart));\n    setCartItems(newCart);\n  }\n\n  // on page load, refresh cart data in local storage\n  useEffect(() => {\n    const refreshCartData = async () => {\n      // get array of just product IDs from cart saved in local storage\n      console.log(cartItems);\n      const productIds = cartItems.map(ci => ci.id);\n      if (productIds.length === 0) return;\n\n      // create query string for GET request\n      let queryString = 'ids[]=' + productIds[0];\n      productIds.forEach((pid, i) => {\n        if (i === 0) return;\n        queryString += '&ids[]=' + pid;\n      });\n\n      // grab all products from selected product IDs\n      let res;\n      try {\n        res = await sendReq(\n          `/api/products?${queryString}`,\n          'GET'\n        );\n      } catch (err) { }\n\n      // loop over cart items, update each one with any new data from back-end\n      let newCart = [];\n      for (let ci of cartItems) {\n        const refreshedData = res.products[res.products.findIndex(p => p.id === ci.id)];\n        newCart.push({\n          id: refreshedData.id,\n          inCart: ci.inCart,\n          name: refreshedData.name,\n          price: refreshedData.price,\n          stock: refreshedData.stock\n        });\n      }\n      // update cart state\n      localStorage.setItem('LOCAL_CART', JSON.stringify(newCart));\n      setCartItems(newCart);\n    }\n    refreshCartData();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <div className=\"flex justify-center\"><LoadingSpinner /></div>}\n      {!isLoading && <>\n        <ul className=\"space-y-1\">\n          {\n            cartItems.map(i => (\n              <div key={i.id}>\n                <CartItem onDelete={() => setShowModal(true)} data={i} />\n                {showModal &&\n                  <Modal\n                    yes={() => {\n                      setShowModal(false);\n                      deleteCartItem(i.id)\n                    }}\n                    no={() => setShowModal(false)}>\n                    Remove item from cart?\n                  </Modal>\n                }\n              </div>\n            ))\n          }\n        </ul>\n        <div className=\"flex justify-end mr-1 mt-4\">\n          <Button className=\"p-2\" to=\"/checkout\">Proceed to checkout</Button>\n        </div>\n      </>}\n    </>\n  );\n}\n\nexport default Cart;"],"sourceRoot":""}