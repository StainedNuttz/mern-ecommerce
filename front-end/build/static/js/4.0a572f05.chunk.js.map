{"version":3,"sources":["authentication/pages/Admin.js"],"names":["Admin","inputs","id","data","type","placeholder","validityRules","VALIDATE_REQUIRED","useHttp","isLoading","error","success","sendReq","createProductHandler","a","JSON","stringify","brand","formState","value","name","price","stock","resetValues","useForm","isValid","changeHandler","submitHandler","className","btnText"],"mappings":"wNAwHeA,UA/GD,WACZ,IAAMC,EAAS,CACb,CACEC,GAAI,QACJC,KAAM,CACJC,KAAM,OACNC,YAAa,gBACbC,cAAc,eACXC,IAAoB,6BAI3B,CACEL,GAAI,OACJC,KAAM,CACJC,KAAM,OACNC,YAAa,eACbC,cAAc,eACXC,IAAoB,4BAI3B,CACEL,GAAI,QACJC,KAAM,CACJC,KAAM,OACNC,YAAa,gBACbC,cAAc,eACXC,IAAoB,6BAI3B,CACEL,GAAI,QACJC,KAAM,CACJC,KAAM,OACNC,YAAa,gBACbC,cAAc,eACXC,IAAoB,8BAM7B,EAA6CC,cAA7C,mBAAOC,EAAP,KAAkBC,EAAlB,KAAyBC,EAAzB,KAAkCC,EAAlC,KAEMC,EAAoB,uCAAG,sBAAAC,EAAA,+EAEnBF,EACJ,oBACA,OACAG,KAAKC,UAAU,CACbC,MAAOC,EAAUjB,OAAOgB,MAAME,MAC9BC,KAAMF,EAAUjB,OAAOmB,KAAKD,MAC5BE,MAAOH,EAAUjB,OAAOoB,MAAMF,MAC9BG,MAAOJ,EAAUjB,OAAOqB,MAAMH,QAEhC,CAAE,eAAgB,qBAXK,OAazBI,IAbyB,uGAAH,qDAiB1B,EAA+DC,YAAQvB,EAAQ,CAAEwB,SAAS,GAASZ,GAAnG,mBAAOK,EAAP,KAAkBQ,EAAlB,KAAiCC,EAAjC,KAAgDJ,EAAhD,KAEA,OACE,qCACE,oBAAIK,UAAU,0BAAd,6BACA,qBAAKA,UAAU,GAAf,SACE,cAAC,IAAD,CACEA,UAAU,WACVC,QAAQ,SACRpB,UAAWA,EACXC,MAAOA,EACPC,QAASA,EACTO,UAAWA,EACXS,cAAeA,EACfD,cAAeA,EACfzB,OAAQA,EATV,SAWE,oBAAI2B,UAAU,gBAAd","file":"static/js/4.0a572f05.chunk.js","sourcesContent":["import React from 'react';\n\nimport { VALIDATE_REQUIRED } from '../../shared/utils/validations';\n\nimport Form from '../../shared/components/Forms/Form';\n\nimport { useHttp } from '../../shared/hooks/useHttp';\nimport { useForm } from '../../shared/hooks/useForm';\n\nconst Admin = () => {\n  const inputs = [\n    {\n      id: 'brand',\n      data: {\n        type: 'text',\n        placeholder: 'Product brand',\n        validityRules: {\n          [VALIDATE_REQUIRED]: 'Please enter in a brand'\n        }\n      }\n    },\n    {\n      id: 'name',\n      data: {\n        type: 'text',\n        placeholder: 'Product name',\n        validityRules: {\n          [VALIDATE_REQUIRED]: 'Please enter in a name'\n        }\n      }\n    },\n    {\n      id: 'price',\n      data: {\n        type: 'text',\n        placeholder: 'Product price',\n        validityRules: {\n          [VALIDATE_REQUIRED]: 'Please enter in a price'\n        }\n      }\n    },\n    {\n      id: 'stock',\n      data: {\n        type: 'text',\n        placeholder: 'Product stock',\n        validityRules: {\n          [VALIDATE_REQUIRED]: 'Please enter in a stock'\n        }\n      }\n    }\n  ]\n\n  const [isLoading, error, success, sendReq] = useHttp();\n\n  const createProductHandler = async () => {\n    try {\n      await sendReq(\n        '/api/products/new',\n        'POST',\n        JSON.stringify({\n          brand: formState.inputs.brand.value,\n          name: formState.inputs.name.value,\n          price: formState.inputs.price.value,\n          stock: formState.inputs.stock.value,\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n      resetValues();\n    } catch (err) {}\n  }\n\n  const [formState, changeHandler, submitHandler, resetValues] = useForm(inputs, { isValid: false }, createProductHandler);\n\n  return (\n    <>\n      <h2 className=\"text-4xl font-bold mb-5\">Admin Dashboard</h2>\n      <div className=\"\">\n        <Form\n          className=\"relative\"\n          btnText=\"Create\"\n          isLoading={isLoading}\n          error={error}\n          success={success}\n          formState={formState}\n          submitHandler={submitHandler}\n          changeHandler={changeHandler}\n          inputs={inputs}\n        >\n          <h3 className=\"text-2xl mb-4\">Create product</h3>\n        </Form>\n        {/* <Form\n          className=\"relative\"\n          btnText=\"Create\"\n          isLoading={isLoading}\n          error={error}\n          formState={formState}\n          submitHandler={submitHandler}\n          changeHandler={changeHandler}\n          inputs={inputs}\n        >\n          <h3 className=\"text-2xl mb-4\">Create product</h3>\n        </Form>\n        <Form\n          className=\"relative\"\n          btnText=\"Create\"\n          isLoading={isLoading}\n          error={error}\n          formState={formState}\n          submitHandler={submitHandler}\n          changeHandler={changeHandler}\n          inputs={inputs}\n        >\n          <h3 className=\"text-2xl mb-4\">Create product</h3>\n        </Form> */}\n      </div>\n    </>\n  )\n}\n\nexport default Admin;"],"sourceRoot":""}