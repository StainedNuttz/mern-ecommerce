{"version":3,"sources":["authentication/pages/Login.js"],"names":["Login","auth","useContext","AuthContext","inputs","id","data","type","placeholder","validityRules","VALIDATE_EMAIL","VALIDATE_REQUIRED","useHttp","isLoading","error","sendRequest","loginHandler","a","JSON","stringify","email","formState","value","password","res","user","username","isAdmin","token","login","resetValues","useForm","isValid","changeHandler","submitHandler","className","btnText"],"mappings":"gOA4EeA,UAlED,WACZ,IAAMC,EAAOC,qBAAWC,KAElBC,EAAS,CACb,CACEC,GAAI,QACJC,KAAM,CACJC,KAAM,OACNC,YAAa,QACbC,cAAc,eACXC,IAAiB,mCAIxB,CACEL,GAAI,WACJC,KAAM,CACJC,KAAM,WACNC,YAAa,WACbC,cAAc,eACXE,IAAoB,oCAM7B,EAAiDC,cAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAAkCC,GAAlC,WAEMC,EAAY,uCAAG,sCAAAC,EAAA,+EAECF,EAChB,aACA,OACAG,KAAKC,UAAU,CACbC,MAAOC,EAAUjB,OAAOgB,MAAME,MAC9BC,SAAUF,EAAUjB,OAAOmB,SAASD,QAEtC,IATe,OAEXE,EAFW,SAWwBA,EAAIC,KAArCpB,EAXS,EAWTA,GAAIqB,EAXK,EAWLA,SAAUC,EAXL,EAWKA,QAASC,EAXd,EAWcA,MAC/B3B,EAAK4B,MAAM,CAAExB,KAAIqB,WAAUC,WAAWC,GAZrB,gDAcjBE,EAAY,CAAC,aAdI,yDAAH,qDAkBlB,EAA+DC,YAAQ3B,EAAQ,CAAE4B,SAAS,GAAShB,GAAnG,mBAAOK,EAAP,KAAkBY,EAAlB,KAAiCC,EAAjC,KAAgDJ,EAAhD,KAEA,OACE,qBAAKK,UAAU,sBAAf,SACE,cAAC,IAAD,CACEA,UAAU,gBACVC,QAAQ,QACRvB,UAAWA,EACXC,MAAOA,EACPO,UAAWA,EACXa,cAAeA,EACfD,cAAeA,EACf7B,OAAQA,EARV,SAUE,oBAAI+B,UAAU,2BAAd","file":"static/js/6.2df5b887.chunk.js","sourcesContent":["import React, { useContext } from 'react';\n\nimport { useForm } from '../../shared/hooks/useForm';\nimport { useHttp } from '../../shared/hooks/useHttp';\n\nimport { VALIDATE_REQUIRED, VALIDATE_EMAIL } from '../../shared/utils/validations';\n\nimport Form from '../../shared/components/Forms/Form';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst Login = () => {\n  const auth = useContext(AuthContext);\n  \n  const inputs = [\n    {\n      id: 'email',\n      data: {\n        type: 'text',\n        placeholder: 'Email',\n        validityRules: {\n          [VALIDATE_EMAIL]: 'Please enter in a valid email'\n        }\n      }\n    },\n    {\n      id: 'password',\n      data: {\n        type: 'password',\n        placeholder: 'Password',\n        validityRules: {\n          [VALIDATE_REQUIRED]: 'Please enter in your password',\n        }\n      }\n    }\n  ]\n  \n  const [isLoading, error, success, sendRequest] = useHttp();\n  \n  const loginHandler = async () => {    \n    try {\n      const res = await sendRequest(\n        '/api/login',\n        'POST',\n        JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }),\n        {}\n      );\n      const { id, username, isAdmin, token } = res.user;\n      auth.login({ id, username, isAdmin }, token);\n    } catch (err) {\n      resetValues(['password']);\n    }\n  }\n\n  const [formState, changeHandler, submitHandler, resetValues] = useForm(inputs, { isValid: false }, loginHandler);\n\n  return (\n    <div className=\"flex justify-center\">\n      <Form\n        className=\"max-w-[32rem]\"\n        btnText=\"Login\"\n        isLoading={isLoading}\n        error={error}\n        formState={formState}\n        submitHandler={submitHandler}\n        changeHandler={changeHandler}\n        inputs={inputs}\n      >\n        <h2 className=\"text-3xl font-light mb-4\">Log into your account</h2>\n      </Form>\n    </div>\n  );\n}\n\nexport default Login;"],"sourceRoot":""}