{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","cart/components/CartItem.js","cart/pages/Cart.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","CartItem","props","data","useState","inCart","inCartValue","setInCartValue","showModal","setShowModal","Modal","yes","deleteCartItem","id","no","className","name","stock","price","toFixed","Button","onClick","danger","Cart","JSON","parse","localStorage","getItem","cartItems","setCartItems","cartTotal","setCartTotal","useHttp","isLoading","sendReq","useEffect","a","console","log","productIds","map","ci","queryString","forEach","pid","res","newCart","newCartTotal","refreshedData","products","findIndex","p","push","setItem","stringify","refreshCartData","LoadingSpinner","onDelete","to"],"mappings":"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","file":"static/js/7.e325c78d.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useState } from 'react';\n\nimport Card from '../../shared/components/UI/Card';\nimport Button from '../../shared/components/UI/Button';\n\nconst CartItem = props => {\n  const { data } = props;\n  const [inCartValue, setInCartValue] = useState(data.inCart);\n  const [showModal, setShowModal] = useState(false);\n\n  const incrementCart = () => {\n    let value;\n    if (inCartValue + 1 >= 100) return;\n    setInCartValue(inCartValue + 1);\n  }\n  const decrementCart = () => {\n    let value;\n    if (inCartValue - 1 <= 0) return;\n    setInCartValue(inCartValue - 1);\n  }\n\n  return (\n    <>\n      {showModal &&\n        <Modal\n          yes={() => {\n            setShowModal(false);\n            deleteCartItem(i.id)\n          }}\n          no={() => setShowModal(false)}>\n          Remove item from cart?\n        </Modal>\n      }\n      <tr className=\"border-t border-b border-gray-200\">\n        <td className=\"pl-2 py-5 text-sm\">{data.name}</td>\n\n        <td className={`${data.stock > 0 ? 'text-green-500' : 'text-red-500'} pl-4`}>\n          {data.stock > 0 ? 'In stock' : 'Out of stock'}\n        </td>\n\n        <td className=\"\">\n          {`£${data.price.toFixed(2)}`}\n          <em className=\"ml-1 font-light text-xs\">each</em>\n        </td>\n\n        <td className=\"\">\n          <div className=\"inline-flex items-center bg-white\">\n            <Button className=\"p-0 py-1\" onClick={decrementCart}> - </Button>\n            <span className=\"px-3\">{inCartValue}</span>\n            <Button className=\"p-0 py-1\" onClick={incrementCart}> + </Button>\n          </div>\n        </td>\n\n        <td className=\"font-bold\">\n          {`£${(data.price * inCartValue).toFixed(2)}`}\n        </td>\n        \n        <td className=\"text-right pr-4\">\n          <Button className=\"px-1 py-1\" danger >\n            <i className=\"fa fa-times text-white\" />\n          </Button>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nexport default CartItem;","import React, { useEffect, useState } from 'react';\n\nimport { useHttp } from '../../shared/hooks/useHttp';\n\nimport LoadingSpinner from '../../shared/components/UI/LoadingSpinner';\nimport Button from '../../shared/components/UI/Button';\nimport CartItem from '../components/CartItem';\n\nconst Cart = props => {\n  const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem('LOCAL_CART')) || []);\n  const [showModal, setShowModal] = useState(false);\n  const [cartTotal, setCartTotal] = useState(0);\n\n  const [isLoading, error, success, sendReq] = useHttp();\n\n  const deleteCartItem = id => {\n    const cart = JSON.parse(localStorage.getItem('LOCAL_CART'));\n    const newCart = cart.filter(ci => ci.id !== id);\n    localStorage.setItem('LOCAL_CART', JSON.stringify(newCart));\n    setCartItems(newCart);\n  }\n\n  // on page load, refresh cart data in local storage\n  useEffect(() => {\n    const refreshCartData = async () => {\n      // get array of just product IDs from cart saved in local storage\n      console.log(cartItems);\n      const productIds = cartItems.map(ci => ci.id);\n      if (productIds.length === 0) return;\n\n      // create query string for GET request\n      let queryString = 'ids[]=' + productIds[0];\n      productIds.forEach((pid, i) => {\n        if (i === 0) return;\n        queryString += '&ids[]=' + pid;\n      });\n\n      // grab all products from selected product IDs\n      let res;\n      try {\n        res = await sendReq(\n          `/api/products?${queryString}`,\n          'GET'\n        );\n      } catch (err) { }\n\n      // loop over cart items, update each one with any new data from back-end\n      let newCart = [];\n      let newCartTotal = 0;\n      for (let ci of cartItems) {\n        // refreshedData = NEW PRODUCT DATA\n        // ci = OLD PRODUCT DATA (we continue to use the inCart var only)\n        const refreshedData = res.products[res.products.findIndex(p => p.id === ci.id)];\n        newCartTotal += refreshedData.price * ci.inCart;\n        if (refreshedData) {\n          newCart.push({\n            id: refreshedData.id,\n            inCart: ci.inCart,\n            name: refreshedData.name,\n            price: refreshedData.price,\n            stock: refreshedData.stock\n          });\n        }\n      }\n      // update cart state\n      localStorage.setItem('LOCAL_CART', JSON.stringify(newCart));\n      setCartTotal(newCartTotal.toFixed(2));\n      setCartItems(newCart);\n    }\n    refreshCartData();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <div className=\"flex justify-center\"><LoadingSpinner /></div>}\n      {!isLoading && \n        <>\n          <div className=\"w-4/5 mx-auto\">\n            <h2 className=\"mb-4 text-4xl\">Your cart</h2>\n            <table className=\"w-full table-fixed\">\n              <thead className=\"\">\n                <tr className=\"\">\n                  <th className=\"\"></th>\n                  <th className=\"\"></th>\n                  <th className=\"\"></th>\n                  <th className=\"\"></th>\n                  <th className=\"w-16\"></th>\n                  <th className=\"w-16\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  cartItems.map(i => (\n                    <CartItem onDelete={() => setShowModal(true)} data={i} />\n                  ))\n                }\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td className=\"py-8\">\n                    <h3 className=\"text-lg tracking-wide\">Total</h3>\n                    <span className=\"text-4xl font-bold\">{`£${cartTotal}`}</span>\n                  </td>\n                  <td></td>\n                </tr>\n              </tbody>\n            </table>\n            <div className=\"flex justify-end\">\n              <Button className=\"block p-3 w-64\" to=\"/checkout\">Proceed to checkout</Button>\n            </div>\n          </div>\n        </>\n      }\n    </>\n  );\n}\n\nexport default Cart;"],"sourceRoot":""}